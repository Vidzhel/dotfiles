services:
  # redisinsight:
  #   container_name: 'redisinsight'
  #   image: redislabs/redisinsight:latest
  #   ports:
  #     - '8001:8001'
  #   volumes:
  #     - ~/data/redisinsight:/db
  #   restart: unless-stopped
    # networks:
    #   - cache
  dragonfly:
      image: 'docker.dragonflydb.io/dragonflydb/dragonfly'
      container_name: 'dragonfly'
      ulimits:
        memlock: -1
      ports:
        - "6380:6379"
      # For better performance, consider `host` mode instead `port` to avoid docker NAT.
      # `host` mode is NOT currently supported in Swarm Mode.
      # https://docs.docker.com/compose/compose-file/compose-file-v3/#network_mode
      # network_mode: "host"
      volumes:
        - ~/data/dragonfly:/data
      restart: unless-stopped
      networks:
        - cache

  redis:
      image: redis:6-alpine
      container_name: 'redis'
      restart: always
      ports:
        - '6379:6379'
      command: redis-server --save 20 1 --loglevel warning
      networks:
        - cache
      volumes:
        - ~/data/redis:/data

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: 'rabbitmq'
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - ~/data/rabbitmq/data/mnesia:/var/lib/rabbitmq/mnesia
      - ~/data/rabbitmq/log:/var/log/rabbitmq/
    networks:
      - rabbitmq_go_net
    restart: unless-stopped

  postgres:
    container_name: postgres
    image: postgres:14-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
      PGDATA: /data/postgres
    volumes:
      - ~/data/postgres:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - postgres
    restart: unless-stopped
  
  pgadmin:
    container_name: pgadmin-dev
    image: dpage/pgadmin4:6
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-password}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - ~/data/pgadmin:/var/lib/pgadmin

    ports:
      - "${PGADMIN_PORT:-5050}:80"
    networks:
      - postgres
    restart: unless-stopped

  swagger-ui:
    image: swaggerapi/swagger-ui
    container_name: swagger_ui_container
    ports:
      - "8090:8080"
    environment:
      URLS: "[ { url: 'http://localhost:8085/openapi_spec', name: 'STIMP' } ]"
    restart: unless-stopped

networks:
  cache:
    driver: bridge
  postgres:
    driver: bridge
  rabbitmq_go_net:
    driver: bridge
